on: [push, pull_request]

name: Almetica CI

jobs:
  build-linux:
    name: Build Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Run cargo build --release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

  build-windows:
    name: Build Windows
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc, x86_64-pc-windows-gnu]
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Run cargo build --release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

  test:
    name: Run tests
    runs-on: ubuntu-latest
    container: rust:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: almetica
          POSTGRES_PASSWORD: almetica
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Set .env file
        run: |
          echo "TEST_DATABASE_CONNECTION="postgres://almetica:almetica@postgres:5432"" >> .env

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test -- --test-threads=1
